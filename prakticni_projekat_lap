int g = 2;
int f = 3;
int a = 4;
int b = 5;
int e = 6;
int d = 7;
int c = 8;

int dispniz[6];
int d1 = 16;
int d2 = 17;
int d3 = 12;
int d4 = 13;
int d5 = 14;
int d6 = 15;

const int buttonStart = 9;
const int buttonStop = 10;
const int buttonReset = 11;
const int buttonLap = 19;
int loadstart, loadstop, loadreset, loadlap, btstate;
int dugme;
int lapcheck = 1;
int lapcheck1;


int lapniz1[6];
int lapniz2[6];
int lapniz3[6];
int lapniz4[6];


void setup() {

  pinMode(d1, OUTPUT);
  pinMode(d2, OUTPUT); 
  pinMode(d3, OUTPUT);
  pinMode(d4, OUTPUT);
  pinMode(d5, OUTPUT);
  pinMode(d6, OUTPUT);
  pinMode(a, OUTPUT);
  pinMode(b, OUTPUT); 
  pinMode(c, OUTPUT); 
  pinMode(d, OUTPUT); 
  pinMode(e, OUTPUT); 
  pinMode(f, OUTPUT); 
  pinMode(g, OUTPUT);
  pinMode(buttonStart, INPUT);
  pinMode(buttonStop, INPUT);
  pinMode(buttonReset, INPUT);
  pinMode(buttonLap, INPUT);

}


void loop() {
  loadstart = digitalRead(buttonStart);
  loadstop = digitalRead(buttonStop);
  loadreset = digitalRead(buttonReset);
  loadlap = digitalRead(buttonLap);
  if(loadstart == HIGH) {
    btstate = 1;
  }
  if(btstate == 1)
  {
    if(loadstop == HIGH) {
       btstate = 2;
     }
     if(loadreset == HIGH) {
        btstate = 0;
     }
     if(loadlap == HIGH) {
        for (int i = 0; i < 6; i++) {
            lapniz4[i] = lapniz3[i];
            lapniz3[i] = lapniz2[i];
            lapniz2[i] = lapniz1[i];
            lapniz1[i] = dispniz[i];
        }
      }
      dispniz[0]++;
      for (int i = 0; i < 6; i++) {
         clearLEDs();
         pick_display(i);
         chose_digit(dispniz[i]);
         delayMicroseconds(1550);
      }
      if(dispniz[0] == 10) {
          dispniz[0] = 0;
          dispniz[1]++;
      }
      if(dispniz[1] == 10) {
          dispniz[1] = 0;
          dispniz[2]++;
      }
      if(dispniz[2] == 10) {
          dispniz[2] = 0;
          dispniz[3]++;
      }
      if(dispniz[3] == 6) {
           dispniz[3] = 0;
           dispniz[4]++;
      }
      if(dispniz[4] == 10) {
           dispniz[4] = 0;
           dispniz[5]++;
      }
      if(dispniz[5] == 6) {
          dispniz[5] = 0;
      }
  }
  else if (btstate == 2) {
    if(loadreset == HIGH) {
        btstate = 0;
     }
     for (int i = 0; i < 6; i++) {
         clearLEDs();
         pick_display(i);
         chose_digit(dispniz[i]);
         delayMicroseconds(1550);
     }
  }
  else if (btstate == 3) {
     if(loadlap == HIGH && lapcheck == 1) {
        dugme++;
        lapcheck = 0;
        lapcheck1 = 1;
     }
     else {
      lapcheck = 1;
     }
     if(dugme >= 5 && dugme <= 10) {
      chose_lap(1);
     }
     else if(dugme <=  15) {
      chose_lap(2);
     }
     else if(dugme <=  20) {
      chose_lap(3);
     }
     else if(dugme <=  25){
      chose_lap(4);
     }
     else if(dugme > 25) {
      dugme = 0;
     }
     else {
        for (int i = 0; i < 6; i++) {
        clearLEDs();
        pick_display(i);
        chose_digit(0);
        delayMicroseconds(1550);
        }
     }
  }
  else
  {
    if(loadstart == HIGH) {
         btstate = 1;
    }
    for (int i = 0; i < 6; i++) {
        dispniz[i] = 0;
        clearLEDs();
        pick_display(i);
        chose_digit(dispniz[i]);
        delayMicroseconds(1550);
    }
    if(loadlap == HIGH) {
      btstate = 3;
    }
  }
}

void pick_display(int digit) {
  digitalWrite(d1, LOW);
  digitalWrite(d2, LOW);
  digitalWrite(d3, LOW);
  digitalWrite(d4, LOW);
  digitalWrite(d5, LOW);
  digitalWrite(d6, LOW);

  switch(digit) {
  case 0:
      digitalWrite(d1, HIGH);
      break;
   case 1:
      digitalWrite(d2, HIGH);
      break;
   case 2:
      digitalWrite(d3, HIGH);
      break;
   case 3:
      digitalWrite(d4, HIGH);
      break;
   case 4:
      digitalWrite(d5, HIGH);
      break;
   case 5:
      digitalWrite(d6, HIGH);
      break;
  }
  
}

void chose_lap(char num) {
  switch(num) {
    default:
      for (int i = 0; i < 6; i++) {
        clearLEDs();
        pick_display(i);
        chose_digit(lapniz1[i]);
        delayMicroseconds(1550);
      }
      break;
    case 2:
      for (int i = 0; i < 6; i++) {
        clearLEDs();
        pick_display(i);
        chose_digit(lapniz2[i]);
        delayMicroseconds(1550);
      }
      break;
    case 3:
      for (int i = 0; i < 6; i++) {
        clearLEDs();
        pick_display(i);
        chose_digit(lapniz3[i]);
        delayMicroseconds(1550);
      }
      break;
    case 4:
      for (int i = 0; i < 6; i++) {
        clearLEDs();
        pick_display(i);
        chose_digit(lapniz4[i]);
        delayMicroseconds(1550);
      }
      break;
  }
}

void chose_digit(char num) {
  switch(num) {
    default:
    digitalWrite(a, HIGH);
    digitalWrite(b, HIGH);
    digitalWrite(c, HIGH);
    digitalWrite(d, HIGH);
    digitalWrite(e, HIGH);
    digitalWrite(f, HIGH);
    digitalWrite(g, LOW);
    break;

    case 1:
    digitalWrite(a, LOW);
    digitalWrite(b, HIGH);
    digitalWrite(c, HIGH);
    digitalWrite(d, LOW);
    digitalWrite(e, LOW);
    digitalWrite(f, LOW);
    digitalWrite(g, LOW);
    break;
    
    case 2:
    digitalWrite(a, HIGH);
    digitalWrite(b, HIGH);
    digitalWrite(c, LOW);
    digitalWrite(d, HIGH);
    digitalWrite(e, HIGH);
    digitalWrite(f, LOW);
    digitalWrite(g, HIGH);
    break;
    
    case 3:
    digitalWrite(a, HIGH);
    digitalWrite(b, HIGH);
    digitalWrite(c, HIGH);
    digitalWrite(d, HIGH);
    digitalWrite(e, LOW);
    digitalWrite(f, LOW);
    digitalWrite(g, HIGH);
    break;
    
    case 4:
    digitalWrite(a, LOW);
    digitalWrite(b, HIGH);
    digitalWrite(c, HIGH);
    digitalWrite(d, LOW);
    digitalWrite(e, LOW);
    digitalWrite(f, HIGH);
    digitalWrite(g, HIGH);
    break;
    
    case 5:
    digitalWrite(a, HIGH);
    digitalWrite(b, LOW);
    digitalWrite(c, HIGH);
    digitalWrite(d, HIGH);
    digitalWrite(e, LOW);
    digitalWrite(f, HIGH);
    digitalWrite(g, HIGH);
    break;
    
    case 6:
    digitalWrite(a, HIGH);
    digitalWrite(b, LOW);
    digitalWrite(c, HIGH);
    digitalWrite(d, HIGH);
    digitalWrite(e, HIGH);
    digitalWrite(f, HIGH);
    digitalWrite(g, HIGH);
    break;
    
    case 7:
    digitalWrite(a, HIGH);
    digitalWrite(b, HIGH);
    digitalWrite(c, HIGH);
    digitalWrite(d, LOW);
    digitalWrite(e, LOW);
    digitalWrite(f, LOW);
    digitalWrite(g, LOW);
    break;
    
    case 8:
    digitalWrite(a, HIGH);
    digitalWrite(b, HIGH);
    digitalWrite(c, HIGH);
    digitalWrite(d, HIGH);
    digitalWrite(e, HIGH);
    digitalWrite(f, HIGH);
    digitalWrite(g, HIGH);
    break;
    
    case 9:
    digitalWrite(a, HIGH);
    digitalWrite(b, HIGH);
    digitalWrite(c, HIGH);
    digitalWrite(d, HIGH);
    digitalWrite(e, LOW);
    digitalWrite(f, HIGH);
    digitalWrite(g, HIGH);
    break;
    
  }
}

void clearLEDs() {
  digitalWrite(a,LOW);
  digitalWrite(b,LOW);
  digitalWrite(c,LOW);
  digitalWrite(d,LOW);
  digitalWrite(e,LOW);
  digitalWrite(f,LOW);
  digitalWrite(g,LOW);
}
